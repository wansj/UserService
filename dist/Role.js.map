{"version":3,"sources":["../Role.js"],"names":["mongoose","require","ForbiddenError","SyntaxError","AuthenticationError","RoleSchema","Schema","name","type","String","unique","required","description","isAdmin","Boolean","default","maxBorrowDuration","Number","maxHoldCount","maxDelayTimes","maxDelayDays","Role","model","e","generateRoleModel","token","byId","id","findById","exec","createRole","args","Promise","resolve","reject","user","role","username","save","doc","delete","User","find","linkedUsers","length","usernames","map","join","findByIdAndDelete","update","rest","Object","keys","findByIdAndUpdate","new","listRoles","roles","availableRoles","ids","count","$in","query","AdminUsersCount","module","exports"],"mappings":"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","file":"Role.js","sourcesContent":["import { getUser, wrapError } from './utils'\nimport { User } from './User'\nimport { AdminUsersCount } from './settings'\nconst mongoose = require('mongoose')\nconst { ForbiddenError, SyntaxError, AuthenticationError } = require(\"apollo-server-errors\")\nconst RoleSchema = mongoose.Schema({\n  name: {type: String, unique: true, required: true},\n  description: String,\n  isAdmin: {type: Boolean, default: false, required: true},\n  maxBorrowDuration: {type: Number, default: 90, required: true},\n  maxHoldCount: {type: Number, default: 5, required: true},\n  maxDelayTimes: {type: Number, default: 1, required: true},\n  maxDelayDays: {type: Number, default: 30, required: true}\n})\nlet Role = null\ntry {\n  Role = mongoose.model('Role', RoleSchema)\n} catch (e) {\n  if (e.name === 'OverwriteModelError') {\n    Role = mongoose.model('Role')\n  }\n}\n\nconst generateRoleModel = (token) => ({\n  byId: (id) => {\n    return Role.findById(id).exec()\n  },\n  createRole: (args) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!token) throw new AuthenticationError('用户未登陆')\n        const user = await getUser(token)\n        if(!user.role) throw new SyntaxError(`用户${user.username}角色未定义`)\n        const role = await Role.findById(user.role).exec()\n        if(!role.isAdmin) throw new ForbiddenError(`用户${user.username}无权限创建角色`)\n        const doc = await new Role({ ...args }).save()\n        resolve(doc)\n      } catch (e) {\n        reject(wrapError(e))\n      }\n    })\n  },\n  delete: ({ id }) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!token) throw new AuthenticationError('用户未登陆')\n        const user = await getUser(token)\n        if(!user.role) throw new SyntaxError(`用户${user.username}角色未定义`)\n        const role = await Role.findById(user.role).exec()\n        if (!role.isAdmin) throw new ForbiddenError(`用户${user.username}无权限删除角色`)\n        const linkedUsers = await User.find({ role: id }).exec()\n        if (linkedUsers.length > 0) {\n          const usernames = linkedUsers.map(user => user.username).join('、')\n          throw new ForbiddenError(`要删除的角色上已关联了用户，必须先为已关联用户后重新指定角色。关联的用户有：${usernames}`)\n        }\n        await Role.findByIdAndDelete(id).exec()\n        resolve(true)\n      } catch (e) {\n        reject(wrapError(e))\n      }\n    })\n  },\n  update: ({ id, ...rest }) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!token) throw new AuthenticationError('用户未登陆')\n        const user = await getUser(token)\n        if(!user.role) throw new SyntaxError(`用户${user.username}角色未定义`)\n        let role = await Role.findById(user.role).exec()\n        if (!role.isAdmin) throw new ForbiddenError(`用户${user.username}无权限修改角色`)\n        if (Object.keys(rest).length === 0) throw new ForbiddenError('要修改的内容不能为空')\n        role = await Role.findByIdAndUpdate(id, rest, { new: true }).exec()\n        resolve(role)\n      } catch (e) {\n        reject(wrapError(e))\n      }\n    })\n  },\n  listRoles: () => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!token) throw new AuthenticationError('用户未登陆')\n        const user = await getUser(token)\n        if(!user.role) throw new SyntaxError(`用户${user.username}角色未定义`)\n        const role = await Role.findById(user.role).exec()\n        if(!role.isAdmin) throw new ForbiddenError(`用户${user.username}无权限查看角色`)\n        const roles = await Role.find({}).exec()\n        resolve(roles)\n      } catch (e) {\n        reject(wrapError(e))\n      }\n    })\n  },\n  // 如果管理员账户数量已达到设置值，则关闭管理员账户注册功能，此方法将仅返回非管理员角色\n  availableRoles: () => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const roles = await Role.find({isAdmin: true}).exec()\n        const ids = roles.map(role => role.id)\n        const { User } = require('./User')\n        const count = await User.count({role: {$in: ids}}).exec()\n        const query = count < AdminUsersCount ? {} : { isAdmin: false }\n        resolve(await Role.find(query).exec())\n      } catch (e) {\n        reject(wrapError(e))\n      }\n    })\n  }\n})\nmodule.exports = { Role, generateRoleModel }\n"]}